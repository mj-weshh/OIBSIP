import random
import string


#'password_generator' function takes length, include_letters, include_digits, include_symbols as arguments
def password_generator(length, include_letters, include_digits, include_symbols):
    #the 'character_domain' is set to an empty string
    character_domain = ''
    
    #it adds/appends the letters, digits and symbols to the character_domain according to the users preference 

    if include_letters == True:
        character_domain += string.ascii_letters
        
    if include_digits == True:
        character_domain += string.digits
        
    if include_symbols == True:
        character_domain += string.punctuation
        
    if not character_domain:
        print("!You must choose at least one character type!")
        return None
    
    #the password is generated by randomly choosing elemets in the 'character_domain' sticking to the length choosen by the user
    generated_password = ''.join(random.choice(character_domain) \
for _ in range(length))
    
    return generated_password
    
    
def main():
    print("\nRandom Password Generator")#title
    
    try:
        #user sets the length they want for the password 
        length = int(input("\nEnter your preffered password length, e.g(8): "))
        
        #the user chooses whether to include letters in the password
        use_letters =input("Use letters in the password? (y/n): ").upper()
        
        if use_letters == 'Y':
            include_letters = True
        else:
            include_letters = False
            
        #the user chooses whether to include digits in the password
        use_digits =input("Use digits in the password? (y/n): ").upper()

        if use_digits == 'Y':
            include_digits = True
        else:
            include_digits = False
        
        #the user chooses whether to include symbols in the password
        use_symbols =input("Use symbols in the password? (y/n): ").upper()

        if use_symbols == 'Y':
            include_symbols = True
        else:
            include_symbols = False
            
    except ValueError:
        #when the users input is invalid he/she is notified
        print("Invalid input!! Try again.")
        return
    
    #calling 'password_generator' function and storing its return value in the 'password' variable
    password = password_generator(length, include_letters, include_digits,\
include_symbols)


    #Displays the password generated to the user    
    print(f"\nYour generated password: {password}")


if __name__ == "__main__":
    main()